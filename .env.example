# Web3 Guardian Backend Environment Configuration
# Copy this file to .env and fill in your actual API keys

# Application Settings
SECRET_KEY=your-secret-key-here-generate-a-secure-one
DEBUG=false
ENVIRONMENT=production

# Server Configuration
HOST=0.0.0.0
PORT=8000
WORKERS=1
RELOAD=false

# CORS Settings
CORS_ORIGINS=*
CORS_METHODS=*
CORS_HEADERS=*

# Database (Optional)
DATABASE_URL=sqlite:///./web3_guardian.db

# Google Gemini AI Configuration
GOOGLE_API_KEY=your-google-gemini-api-key-here
GEMINI_MODEL=gemini-1.5-pro

# Tenderly Configuration (for transaction simulation)
TENDERLY_ACCESS_KEY=your-tenderly-access-key
TENDERLY_PROJECT=your-project-slug
TENDERLY_USERNAME=your-tenderly-username
TENDERLY_ACCOUNT_ID=your-account-id

# Web3 Provider Configuration
WEB3_PROVIDER_URI=https://mainnet.infura.io/v3/YOUR-PROJECT-ID
INFURA_PROJECT_ID=your-infura-project-id
ALCHEMY_API_KEY=your-alchemy-api-key
CHAIN_ID=1

# Blockchain API Keys
ETHERSCAN_API_KEY=your-etherscan-api-key
POLYGONSCAN_API_KEY=your-polygonscan-api-key
BSCSCAN_API_KEY=your-bscscan-api-key

# Vector Database Configuration (for RAG)
PINECONE_API_KEY=your-pinecone-api-key
PINECONE_ENVIRONMENT=your-pinecone-environment
PINECONE_INDEX_NAME=smart-contracts-knowledge

# Rate Limiting
RATE_LIMIT=100/minute

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE=logs/web3-guardian.log

# Cache Configuration
REDIS_URL=redis://localhost:6379/0
CACHE_TTL=3600

# Security Analysis Configuration
SECURITY_ANALYSIS_TIMEOUT=30
MAX_CONTRACT_SIZE=1000000
ENABLE_DEEP_ANALYSIS=true

# Report Generation
REPORT_STORAGE_PATH=./reports
MAX_REPORT_SIZE=50MB